@attribute [Route(Route)]
@inject NavigationManager Nav

<div class="container-lg mt-5">
    <div class="hstack">
        <h3 class="m-0">Users</h3>
        <button class="btn btn-secondary ms-auto" @onclick="@(() => Nav.NavigateTo(@ManageUsersAddEditUserPage.Route))">
            <i class="fa fa-plus"></i>
            Add
        </button>
    </div>

    @if (_users != null)
    {
        <div class="card mt-4">
            <div class="card-body p-0">
                <table class="table table-striped m-0">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Username</th>
                        <th>Display Name</th>
                        <th>Assigned Role</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var (i, e) in _users.Select((e, i) => (i+1, e)))
                    {
                        <tr>
                            <td>@i</td>
                            <td>@e.UserName</td>
                            <td>@e.DisplayName</td>
                            <td>@e.AssignedRole</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    public const string Route = "/Portal/Manage/Users";
    
    private List<UserData>? _users;

    protected override async Task OnInitializedAsync()
    {
        var result = await Mediator.Send(new GetUsers());
        if (result.IsSuccess)
        {
            _users = result.Value;
        }
    }
}