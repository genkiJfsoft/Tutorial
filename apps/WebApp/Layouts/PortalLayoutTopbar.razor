@using System.Net.Http
@using System.Net.Http.Json
@using ExpenseTracker.Core.Application.Data
@using ExpenseTracker.Core.Application.Features
@using ExpenseTracker.Core.Application.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.JSInterop
@using ExpenseTracker.WebApp
@using ExpenseTracker.WebApp.Components
@using ExpenseTracker.WebApp.Services
@using BlazorBootstrap
@using System.Globalization
@using System.Collections.Generic
@using ExpenseTracker.Core.Providers.Persistence.Services
@using ExpenseTracker.Core.Domain
@using System.Resources
@using ExpenseTracker.WebApp.Resources
@using ExpenseTracker.Core.Domain.Authorization

@using Microsoft.AspNetCore.Identity

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<User> UserManager
@inject IJSRuntime JSRuntime
@using ExpenseTracker.WebApp.Infrastructure
@inject UserManager<User> UserManager
<AuthorizeView>
    <header id="topbar">
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container-fluid">
                <button class="sidebar-toggler" type="button" data-toggle="sidebar" aria-label="Toggle sidebar">
                    <i class="bi bi-layout-sidebar"></i>
                </button>
                <p style="color:#FFF">@L["Welcome Back"] @FullName</p>
                <div style="margin-left:60%; color:white; background-color:white;-webkit-text-fill-color:black">   <CultureSelector></CultureSelector></div>
             

                <ul class="nav">
                    <UserNavItemDropdown />
                </ul>

            </div>


        </nav>
    </header>
</AuthorizeView>
@code {





    private string? FullName;
       
    protected override async Task OnInitializedAsync() {
      
         var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        FullName = user.FindFirst("FullName")?.Value ?? "Unknown";
    }
    // protected override async Task OnInitializedAsync()
    
  

    //     var userId = await UserService.GetCurrentUserIdAsync();
    //     if (userId != null)
    //     {
    //         var preferredLanguage = await UserService.GetPreferredLanguageAsync(userId);
    //         if (!string.IsNullOrEmpty(preferredLanguage))
    //         { // Apply the saved culture
    //             // CultureInfo.CurrentCulture = new CultureInfo(preferredLanguage);
    //             // CultureInfo.CurrentUICulture = new CultureInfo(preferredLanguage);
    //             // currentCulture = preferredLanguage;
    //         }
    //         }

    //         FullName = user.FindFirst("FullName")?.Value ?? "Unknown";
    //     }



}




